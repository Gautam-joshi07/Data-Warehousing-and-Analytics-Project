/* database exploration */
-- explore all objects in the db

-- shows all tables and schema
SELECT * FROM INFORMATION_SCHEMA.TABLES

--explore all columns
SELECT * FROM INFORMATION_SCHEMA.COLUMNS

SELECT * FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'dim_customer'

/* Dimension exploration */
-- Identifying the unique values in each dimension

-- explore the countries from our customers come 
SELECT DISTINCT country FROM gold.dim_customers

-- explore category and subcategory
SELECT DISTINCT category, subcategory, product_name 
FROM gold.dim_products 
ORDER BY 1,2,3

SELECT DISTINCT product_line FROM gold.dim_products

SELECT * FROM gold.dim_products

/* Data exploration */
-- Identifying the earliest and latest date
-- understand the scope of data and the timespan

-- find the date of the first and last order
SELECT 
MIN(order_date) as first_order,
MAX(order_date) as last_order,
DATEDIFF(YEAR, MIN(order_date), MAX(order_date)) AS order_range_year,
DATEDIFF(MONTH, MIN(order_date), MAX(order_date)) AS order_range_month
FROM gold.fact_sales

-- find the youngest and oldest customer with birthdate and age
SELECT 
MIN(birthdate) as  oldest_cust_birthdate,
DATEDIFF(YEAR, MIN(birthdate),	GETDATE()) as oldest_age,
MAX(birthdate) as youngest_cust_birthdate,
DATEDIFF(YEAR, MAX(birthdate),	GETDATE()) as youngest_age
FROM gold.dim_customers


/* measures exploration */
-- find the total sales
SELECT 
SUM(sales_amount) as total_sales
FROM gold.fact_sales

-- find how many items are sold
SELECT 
SUM(quantity) as total_quantity
FROM gold.fact_sales

-- find the total numbers of order
SELECT 
COUNT(order_number) as total_orders
FROM gold.fact_sales

SELECT DISTINCT
COUNT(order_number) as total_distinct_order
FROM gold.fact_sales

-- find the average price of order
SELECT
AVG(price) as avg_price
FROM gold.fact_sales

--find the total numbe of product
SELECT
COUNT(product_name) as total_product
FROM gold.dim_products

-- find the total number of customer
SELECT
COUNT(customer_key)
FROM gold.dim_customers

--find the total_customer who has placed an order
SELECT

COUNT(DISTINCT(customer_key))
FROM gold.dim_customers

-- Generate report of it

SELECT 'total_sales',
SUM(sales_amount)
FROM gold.fact_sales
UNION ALL

SELECT 'total_quantity',
SUM(quantity)
FROM gold.fact_sales
UNION ALL


SELECT 'total_orders',
COUNT(order_number)
FROM gold.fact_sales

UNION ALL
SELECT 'avg_price',
AVG(price) 
FROM gold.fact_sales

UNION ALL
SELECT 'min_price',
MIN(price) 
FROM gold.fact_sales

UNION ALL
SELECT 'max_price',
MAX(price) 
FROM gold.fact_sales

UNION ALL
SELECT 'total_product',
COUNT(product_name)
FROM gold.dim_products

UNION ALL
SELECT 'total customer',
COUNT(customer_key)
FROM gold.dim_customers


/* magnitude analysis */
-- campare the measures values by category

--find the total customer by countries
SELECT country,
COUNT(customer_key) as total_customer
FROM gold.dim_customers
GROUP BY country
ORDER  BY total_customer

--find the total customer by gender
SELECT gender,
COUNT(customer_key) as total_customer
FROM gold.dim_customers
GROUP BY gender
ORDER BY total_customer DESC

-- find the total product by category
SELECT category,
COUNT(product_key) as total_product
FROM gold.dim_products
GROUP BY category
ORDER BY total_product

-- what is the avg cost in each category
SELECT category,
AVG(cost) as avg_cost
FROM gold.dim_products
GROUP BY category
ORDER BY avg_cost DESC

-- what's the total revenue generated for each category
SELECT 
p.category,
SUM(f.sales_amount) as total_revenue
FROM gold.fact_sales f
LEFT JOIN gold.dim_products p
ON p.product_key = f.product_key
GROUP BY p.category
ORDER BY total_revenue

-- what is the total revenue generated by each customer
SELECT p.customer_key, p.first_name, p.last_name,
f.quantity,
SUM(f.sales_amount) as total_revenue
FROM gold.fact_sales f
LEFT JOIN gold.dim_customers p
ON p.customer_key = f.customer_key
Group by p.customer_key, p.first_name, p.last_name, f.quantity
ORDER BY total_revenue

-- find the distribution items of sales across all countries
SELECT 
d.country,
SUM(f.quantity) as total_revenue
FROM gold.fact_sales f
LEFT JOIN gold.dim_customers d
ON d.customer_key = f.customer_key
GROUP BY d.country
ORDER BY total_revenue

/* ranking analysis */

-- top 5 product that generate highest revenue
SELECT TOP 5 p.product_name,
SUM(f.sales_amount) as total_revenue
FROM gold.fact_sales f
LEFT JOIN gold.dim_products p
ON p.product_key = f.product_key
GROUP BY p.product_name
ORDER BY total_revenue DESC

-- worst 5 product that generate highest revenue
SELECT TOP 5 p.product_name,
SUM(f.sales_amount) as total_revenue
FROM gold.fact_sales f
LEFT JOIN gold.dim_products p
ON p.product_key = f.product_key
GROUP BY p.product_name
ORDER BY total_revenue 







SELECT * FROM gold.dim_customers;
SELECT * FROM gold.dim_products;
SELECT * FROM gold.fact_sales;







